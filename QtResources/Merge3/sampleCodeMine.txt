local kToolbarButtonText = i18nModule.TranslateId("Studio.TerrainEditor.Main.ToolbarButton")

local kMinWidthWidth = 249

-- A function to sync toolbar button 'active' state with plugin gui
-- visibility.
local function updateButtonActive(button, pluginMine)
    if pluginMine.Enabled then 
      button:SetActive(true)
    else
      button:SetActive(false)
    end
end

-- Mine Create the toolbar, create the button to toggle terrain tools plugin GUI on/off.
local toolbar = plugin:CreateToolbar('TerrainToolsLuaToolbarName')

local toggleVisibilityButton

toggleVisibilityButton = toolbar:CreateButton("Editor", 
    i18nModule.TranslateId("Studio.TerrainEditor.Main.Tooltip"),
    "rbxasset://textures/TerrainTools/icon_terrain_big.png", 
    kToolbarButtonText)


local function mineFunction()
    print("This is Mine function")
end

toggleVisibilityButton.ClickableWhenViewportHidden = true

local dockWidgetPluginGuiInfo = DockWidgetPluginGuiInfo.new(Enum.InitialDockState.Left, false, false, 0, 0, kMinWidthWidth)

local pluginGui = plugin:CreateDockWidgetPluginGui("TerrainTools_PluginGui", dockWidgetPluginGuiInfo)
pluginGui.Title = i18nModule.TranslateId("Studio.TerrainEditor.Main.TitleMine")

toggleVisibilityButton.Click:connect(function()
    if pluginGui.Enabled then
        pluginGui.Enabled = false
    else
        pluginGui.Enabled = true
    end
end)


-- Immediately sync toolbar button active state with plugin gui visibility.   
updateButtonActive(toggleVisibilityButton, pluginGui)

-- Listen for changes in plugin gui visibility to keep toolbar button
-- active state synced.
pluginGui:GetPropertyChangedSignal("Enabled"):connect(function(property)
    updateButtonActive(toggleVisibilityButton, pluginGui)
end)  